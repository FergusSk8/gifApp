{"version":3,"sources":["components/AddCategory.js","components/GiftItem.js","helpers/getGifts.js","hooks/useFetchGifts.js","components/GifGrid.js","GitExpertApp.js","index.js"],"names":["AddCategory","addCategory","useState","inputValue","setInputValue","onSubmit","e","preventDefault","trim","length","type","value","onChange","target","GiftItem","title","url","id","className","src","alt","getGiftsHelper","name","a","encodeURI","fetch","res","json","data","map","img","images","downsized_medium","useFetchGifts","category","loading","state","setState","useEffect","then","setTimeout","catch","err","console","log","GifGrid","item","key","GitExpertApp","categories","setCategories","ReactDOM","render","document","getElementById"],"mappings":"qMAkCeA,EA/BK,SAAC,GAAmB,IAAlBC,EAAiB,EAAjBA,YAAiB,EACCC,mBAAS,IADV,mBAC5BC,EAD4B,KAChBC,EADgB,KAenC,OACI,0BAAMC,SARO,SAACC,GACdA,EAAEC,iBACCJ,EAAWK,OAAOC,OAAS,IAC1BR,EAAYE,GACZC,EAAc,OAKd,2BACIM,KAAK,OACLC,MAAOR,EACPS,SAjBK,SAACN,GAAO,IACdK,EAASL,EAAEO,OAAXF,MACPP,EAAcO,QCGPG,EATE,SAAC,GAAsB,IAArBC,EAAoB,EAApBA,MAAOC,EAAa,EAAbA,IAAa,EAARC,GAC3B,OACI,yBAAKC,UAAU,8CACX,2BAAIH,GACJ,yBAAKI,IAAKH,EAAKI,IAAKL,M,uBCNnBM,EAAc,uCAAG,WAAMC,GAAN,qBAAAC,EAAA,6DACpBP,EADoB,0FACqEQ,UAAUF,GAD/E,sBAERG,MAAMT,GAFE,cAEpBU,EAFoB,gBAGLA,EAAIC,OAHC,uBAGnBC,EAHmB,EAGnBA,KAHmB,8BAIfA,EAAKC,KAAI,SAAAC,GAAG,YAAK,CAACb,GAAIa,EAAIb,GAAIF,MAAOe,EAAIf,MAAOC,IAAG,UAAEc,EAAIC,cAAN,aAAE,EAAYC,iBAAiBhB,UAJnE,2CAAH,sDCqBZiB,EAlBO,SAACC,GAAc,IAAD,EACNhC,mBAAS,CAC/B0B,KAAM,GACNO,SAAS,IAHmB,mBACzBC,EADyB,KAClBC,EADkB,KAehC,OATAC,qBAAU,WACNjB,EAAea,GAAUK,MAAK,SAAAb,GAC1Bc,YAAW,kBAAMH,EAAS,CACtBT,KAAK,YAAKF,GACVS,SAAS,MACR,QACNM,OAAM,SAAAC,GAAG,OAAIC,QAAQC,IAAIF,QAC7B,CAACR,IAEGE,GCQIS,EArBC,SAAC,GAAY,IAAXvB,EAAU,EAAVA,KAAU,EAEQW,EAAcX,GAAvCa,EAFiB,EAEjBA,QAAeJ,EAFE,EAERH,KAEhB,OACI,oCACI,4BAAKN,GACJa,GAAW,yCACZ,yBAAKjB,UAAU,aAAf,OACKa,QADL,IACKA,OADL,EACKA,EAAQF,KAAI,SAAAiB,GAAI,OACb,kBAAC,EAAD,eAAUC,IAAKD,EAAK7B,IAAQ6B,UCKjCE,EAhBM,WAAM,MAEa9C,mBAAS,CAAC,cAFvB,mBAEhB+C,EAFgB,KAEJC,EAFI,KAMvB,OACI,oCACI,8CACA,kBAAC,EAAD,CAAajD,YALD,SAACU,GAAD,OAAYuC,EAAc,CAACvC,GAAF,mBAAYsC,QAMjD,6BACCA,EAAWpB,KAAI,SAAAH,GAAG,OAAK,kBAAC,EAAD,CAASJ,KAAMI,EAAKqB,IAAKrB,SCV7DyB,IAASC,OACL,kBAAC,EAAD,MACFC,SAASC,eAAe,U","file":"static/js/main.46373d9b.chunk.js","sourcesContent":["import React, {useState} from 'react';\nimport PropTypes from 'prop-types';\n\nconst AddCategory = ({addCategory}) => {\n    const [inputValue, setInputValue] = useState('');\n\n    const onChange = (e) => {\n        const {value} = e.target;\n        setInputValue(value);\n    }\n\n    const onSubmit = (e) => {\n        e.preventDefault();\n        if(inputValue.trim().length > 2) {\n            addCategory(inputValue);\n            setInputValue('');\n        }\n    }\n    return (\n        <form onSubmit={onSubmit}>\n            <input \n                type=\"text\"\n                value={inputValue}\n                onChange={onChange}\n                \n            />\n        </form>\n    )\n}\n\nAddCategory.propTypes = {\n    addCategory: PropTypes.func.isRequired\n}\n\nexport default AddCategory;\n","import React from 'react';\n\nconst GiftItem = ({title, url, id}) => {\n    return (\n        <div className=\"card animate__animated animate__fadeInDown\">\n            <p>{title}</p>\n            <img src={url} alt={title}/>\n        </div>\n    )\n}\n\nexport default GiftItem\n","export const getGiftsHelper = async(name) => {\n    const url = `https://api.giphy.com/v1/gifs/search?api_key=V5ohFHt1LT0lQHG1ITjrDGWzrBpSkvuR&q=${encodeURI(name)}&limit=10`;\n    const res = await fetch(url);\n    const {data} = await res.json();\n    return [...data.map(img => ({id: img.id, title: img.title, url: img.images?.downsized_medium.url}))];\n}","import { useState, useEffect } from \"react\";\nimport {getGiftsHelper} from '../helpers/getGifts';\n\nconst useFetchGifts = (category) => {\n    const [state, setState] = useState({\n        data: [],\n        loading: true,\n    });\n\n    useEffect(() => {\n        getGiftsHelper(category).then(res => {\n            setTimeout(() => setState({\n                data: [...res],\n                loading: false,\n            }) , 3000);\n        }).catch(err => console.log(err));\n    }, [category]);\n\n    return state;\n}\n \nexport default useFetchGifts;","import React from 'react'\nimport PropTypes from 'prop-types'\nimport GiftItem from './GiftItem';\nimport useFetchGifts from '../hooks/useFetchGifts';\n\nconst GifGrid = ({name}) => {\n\n    const {loading, data: images} = useFetchGifts(name);\n\n    return (\n        <>\n            <h3>{name}</h3>\n            {loading && <p>Loading...</p>}\n            <div className=\"card-grid\">\n                {images?.map(item => (\n                    <GiftItem key={item.id} {...item} />\n                ))}\n            </div>\n        </>\n    )\n}\n\nGifGrid.propTypes = {\n    name: PropTypes.string.isRequired\n}\n\nexport default GifGrid\n\n","import React, {useState} from 'react';\nimport AddCategory from './components/AddCategory';\nimport GifGrid from './components/GifGrid';\n\nconst GitExpertApp = () => {\n    //const categories = ['One Punch', 'Goku', 'One piece'];\n    const [categories, setCategories] = useState(['One piece']);\n\n    const addCategory = (value) => (setCategories([value, ...categories]));\n\n    return (\n        <>\n            <h2>Git Expert App</h2>\n            <AddCategory addCategory={addCategory} />\n            <hr />\n            {categories.map(res => (<GifGrid name={res} key={res} />))}\n        </>\n    );\n}\n \nexport default GitExpertApp;","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport GitExpertApp from './GitExpertApp';\n\nReactDOM.render(\n    <GitExpertApp />,\n  document.getElementById('root')\n);\n\n"],"sourceRoot":""}